<Page
    x:Class="InventoryManager.Views.MainPage"
    Style="{StaticResource MahApps.Styles.Page}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mt="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:InventoryManager.Views.Controls"
    xmlns:converter="clr-namespace:InventoryManager.Converters"
    xmlns:properties="clr-namespace:InventoryManager.Properties"
    mc:Ignorable="d"
    DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
    d:DesignHeight="450" d:DesignWidth="800" d:Background="{StaticResource MahApps.Brushes.ThemeBackground}"
    d:Foreground="{StaticResource MahApps.Brushes.ThemeForeground}">
    <Page.Resources>
        <ResourceDictionary>
            <converter:ExpireToColorConverter x:Key="ExpireToColorConverter"/>
        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock
            Style="{StaticResource PageTitleStyle}"
            Margin="{StaticResource MediumLeftMargin}"
            Text="{x:Static properties:Resources.MainPageTitle}" />
        <Grid
            Grid.Row="1"
            Margin="{StaticResource MediumLeftRightMargin}"
            Background="{DynamicResource MahApps.Brushes.Gray10}">
            <!--
            The Mahapps Gray10 color represents where you should place your content.
            Place your content here.
            -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Margin="{StaticResource SmallLeftTopRightBottomMargin}">
                    <Button HorizontalAlignment="Stretch" Margin="{StaticResource SmallTopMargin}" Click="OnGetLatestListClicked">
                        <DockPanel>
                            <mt:PackIcon Kind="Update"/>
                            <TextBlock TextAlignment="Center" Text="Update List"/>
                        </DockPanel>
                    </Button>
                    <Button Margin="{StaticResource SmallTopMargin}" IsEnabled="{Binding SourceHasItems,Mode=OneWay}" Click="OnRemoveAllButtonClicked">
                        <DockPanel>
                            <mt:PackIcon Kind="TrashCanOutline"/>
                            <TextBlock TextAlignment="Center" Text="Delete All"/>
                        </DockPanel>
                    </Button>
                    <Button Margin="{StaticResource SmallTopMargin}" IsEnabled="{Binding SourceHasItems,Mode=OneWay}" Click="OnExportAsExcelClicked">
                        <DockPanel>
                            <mt:PackIcon Kind="MicrosoftExcel"/>
                            <TextBlock TextAlignment="Center" Text="Export As Excel"/>
                        </DockPanel>
                    </Button>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border CornerRadius="10" Margin="{StaticResource SmallTopMargin}" Background="{StaticResource MahApps.Brushes.Gray9}" Width="95" Height="70">
                            <StackPanel>
                                <DockPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4">
                                    <mt:PackIcon Width="12" Kind="PackageVariant"/>
                                    <TextBlock Margin="5,0" VerticalAlignment="Center" FontSize="9" Text="OutSide"/>
                                </DockPanel>
                                <TextBlock TextAlignment="Center" FontWeight="SemiBold" FontSize="14" Text="{Binding SoldMoney,StringFormat={}{0:C}, Mode=OneWay}"/>
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="1" CornerRadius="10" Margin="{StaticResource SmallTopMargin}" Background="{StaticResource MahApps.Brushes.Gray9}" Width="90" Height="70">
                            <StackPanel>
                                <DockPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4">
                                    <mt:PackIcon Width="12" Kind="GiftOutline"/>
                                    <TextBlock Margin="5,0" VerticalAlignment="Center" FontSize="9" Text="Gifts"/>
                                </DockPanel>
                                <TextBlock TextAlignment="Center" FontWeight="SemiBold" FontSize="14" Text="{Binding GiftPoints,StringFormat={}{0:G}, Mode=OneWay}"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </StackPanel>
                <DataGrid ScrollViewer.CanContentScroll="False" Grid.Column="1" x:Name="GridOfProducts" ItemsSource="{Binding Source}" AutoGenerateColumns="False" IsReadOnly="True" MouseDoubleClick="OnGridDoubleClick">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Product Name" Width="150">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" Margin="1">
                                        <TextBlock Text="{Binding Product.Name}" FontSize="11" FontWeight="DemiBold"/>
                                        <TextBlock Text="{Binding Product.Name_AR}" FontSize="10" FontWeight="Light"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="ID" Binding="{Binding Product.ID}" HeaderStyle="{StaticResource GDHeaderStyle}" ElementStyle="{StaticResource GDCellStyle}"/>
                        <DataGridTextColumn Header="System" Binding="{Binding System.CloseBalance}" HeaderStyle="{StaticResource GDHeaderStyle}" ElementStyle="{StaticResource GDCellStyle}"/>
                        <DataGridTextColumn Header="Local" Binding="{Binding TotalReal}" HeaderStyle="{StaticResource GDHeaderStyle}" ElementStyle="{StaticResource GDCellStyle}"/>
                        <DataGridTextColumn Header="Outside" Binding="{Binding TotalOutside}" HeaderStyle="{StaticResource GDHeaderStyle}" ElementStyle="{StaticResource GDCellStyle}"/>
                        <DataGridTextColumn Header="GiveAway" Binding="{Binding TotalGivenAway}" HeaderStyle="{StaticResource GDHeaderStyle}" ElementStyle="{StaticResource GDCellStyle}"/>
                        <DataGridTextColumn Header="Result" Binding="{Binding Result}"  HeaderStyle="{StaticResource GDHeaderStyle}" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource GDCellStyle}">
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Badged.Foreground}"/>
                                    <Setter Property="TextAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="Background" Value="OrangeRed"/>
                                    <Setter Property="Padding" Value="6.5"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="0">
                                            <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Accent}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn HeaderStyle="{StaticResource GDHeaderStyle}" Header="Expire" Binding="{Binding NearestExp, StringFormat='{}{0:M/yyyy}'}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Background" Value="{Binding NearestExp, Converter={StaticResource ExpireToColorConverter}}"/>
                                    <Setter Property="Foreground" Value="#df000000"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                    <Setter Property="TextAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="6.5"/>
                                    <!--If ExpireDate is Equal to DateTime.MaxDate it means the product doesnt contain any expire dates so Hide the Date-->
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding NearestExp.Ticks}" Value="3155378975999999999">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
    </Grid>
</Page>
